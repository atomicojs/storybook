{"version":3,"file":"my-component.stories-cf3e7fca.js","sources":["../../../../node_modules/atomico/src/hooks/hooks.js","../../../../node_modules/atomico/src/hooks/custom-hooks/use-event.js","../../../../node_modules/atomico/src/hooks/custom-hooks/use-promise.js","../../../../node_modules/atomico/src/hooks/custom-hooks/use-suspense.js","../../../../node_modules/atomico/jsx-runtime.js","../../stories/my-component.tsx","../../../plugin/dist/options.js","../../../plugin/dist/core.js"],"sourcesContent":["import { useHook, useUpdate } from \"./create-hooks.js\";\n\nimport { isEqualArray, isFunction } from \"../utils.js\";\n\nexport * from \"./use-effect.js\";\n\n/**\n * Create a persistent local state\n * @type {import(\"core\").UseState}\n */\nexport const useState = (initialState) => {\n    // retrieve the render to request an update\n    const update = useUpdate();\n\n    return useHook((state = []) => {\n        if (!state[1]) {\n            const load = (value) =>\n                isFunction(value) ? value(state[0]) : value;\n            // Initialize the initial state\n            state[0] = load(initialState);\n            // Associate an immutable setState to the state instance\n            state[1] = (nextState) => {\n                nextState = load(nextState);\n                if (state[0] !== nextState) {\n                    state[0] = nextState;\n                    update();\n                }\n            };\n        }\n        // The return is always the same reference\n        return state;\n    });\n};\n\n/**\n * Memorize the return of a callback\n * @type {import(\"core\").UseMemo}\n */\nexport const useMemo = (currentMemo, currentArgs) => {\n    const [state] = useHook(([state, args, cycle = 0] = []) => {\n        if (!args || (args && !isEqualArray(args, currentArgs))) {\n            state = currentMemo();\n        }\n        return [state, currentArgs, cycle];\n    });\n    return state;\n};\n\n/**\n * Apply the redux pattern as a hook\n * @type {import(\"core\").UseReducer}\n */\nexport const useReducer = (reducer, initialArg, init) => {\n    const update = useUpdate();\n    return useHook((state = []) => {\n        if (!state[1]) {\n            state[0] = init !== undefined ? init(initialArg) : initialArg;\n            state[1] = (action) => {\n                const nextState = reducer(state[0], action);\n                if (nextState != state[0]) {\n                    state[0] = nextState;\n                    update();\n                }\n            };\n        }\n        return state;\n    });\n};\n\n/**\n * Memorize a callback allowing it to remember the scope\n * variables regardless of the render\n * @type {import(\"core\").UseCallback}\n */\nexport const useCallback = (callback, args) => useMemo(() => callback, args);\n","import { useHost } from \"../create-hooks.js\";\nimport { dispatchEvent } from \"../../element/set-prototype.js\";\n\n/**\n * @type {import(\"core\").UseEvent}\n */\nexport const useEvent = (type, eventInit = {}) => {\n    const ref = useHost();\n    if (!ref[type]) {\n        ref[type] = (detail = eventInit.detail) =>\n            dispatchEvent(ref.current, {\n                type,\n                ...eventInit,\n                detail,\n            });\n    }\n    return ref[type];\n};\n","import { useEffect, useState } from \"../hooks.js\";\n\n/**\n * @type {import(\"core\").UsePromise}\n */\nexport const usePromise = (callback, args, autorun = true) => {\n    /**\n     * @type {import(\"core\").ReturnUseState<import(\"core\").ReturnPromise<any>>}\n     */\n    const [state, setState] = useState(autorun ? { pending: autorun } : {});\n\n    /**\n     * @type {any[]}\n     */\n    const currentArgs = args || [];\n\n    useEffect(() => {\n        if (autorun) {\n            let cancel;\n\n            setState(state.pending ? state : { pending: true });\n\n            callback(...currentArgs).then(\n                (result) => !cancel && setState({ result, fulfilled: true }),\n                (result) => !cancel && setState({ result, rejected: true })\n            );\n\n            return () => (cancel = true);\n        } else {\n            setState((state) => (Object.keys(state).length ? {} : state));\n        }\n    }, [autorun, ...currentArgs]);\n\n    return state;\n};\n","import { useHost, IdSuspense } from \"../create-hooks.js\";\nimport { useEvent } from \"../custom-hooks/use-event.js\";\nimport { usePromise } from \"../custom-hooks/use-promise.js\";\nimport { useInsertionEffect, useLayoutEffect, useState } from \"../hooks.js\";\nimport { addListener } from \"../../utils.js\";\n\n/**\n * @type {EventInit}\n */\nconst Config = { bubbles: true, composed: true };\n\nconst Type = {\n    pending: \"PendingSuspense\",\n    fulfilled: \"FulfilledSuspense\",\n    rejected: \"RejectedSuspense\",\n};\n\n/**\n * @type {import(\"core\").UseAsync}\n */\nexport const useAsync = (callback, args) => {\n    const dispatchPending = useEvent(Type.pending, Config);\n    const dispatchFulfilled = useEvent(Type.fulfilled, Config);\n    const dispatchRejected = useEvent(Type.rejected, Config);\n\n    const status = usePromise(callback, args);\n\n    useLayoutEffect(() => {\n        if (status.pending) {\n            dispatchPending();\n        } else if (status.fulfilled) {\n            dispatchFulfilled();\n        } else {\n            dispatchRejected();\n        }\n    }, [status]);\n\n    if (status.pending) {\n        throw IdSuspense;\n    }\n    //@ts-ignore\n    return status.result;\n};\n\n/**\n *\n * @type {import(\"core\").UseSuspense}\n */\n\nexport const useSuspense = (fps = 8) => {\n    const host = useHost();\n    /**\n     * @type {import(\"internal/hooks\").ReturnSetStateUseSuspense}\n     */\n    const [status, setStatus] = useState({ pending: true });\n\n    /**\n     *\n     * @param {()=>any} callback\n     * @param {number} deep\n     */\n    const delay = (callback, deep) =>\n        requestAnimationFrame(() =>\n            deep ? delay(callback, --deep) : callback()\n        );\n\n    useInsertionEffect((r) => {\n        const { current } = host;\n        let size = 0;\n        let prevent = false;\n        let rejected = false;\n\n        const check = () => {\n            if (!prevent) {\n                prevent = true;\n                delay(() => {\n                    prevent = false;\n                    setStatus((state) =>\n                        size\n                            ? state.pending\n                                ? state\n                                : { pending: true }\n                            : rejected\n                            ? { rejected }\n                            : { fulfilled: true }\n                    );\n                }, fps);\n            }\n        };\n        /**\n         * @param {Event} event\n         */\n        const handler = (event) => {\n            event.stopImmediatePropagation();\n            const { type } = event;\n            if (type === Type.pending) {\n                size++;\n                rejected = false;\n            } else if (type === Type.fulfilled) {\n                size--;\n            } else if (type === Type.rejected) {\n                size--;\n                rejected = true;\n            }\n            check();\n        };\n\n        const unlisteners = [\n            addListener(current, Type.pending, handler),\n            addListener(current, Type.fulfilled, handler),\n            addListener(current, Type.rejected, handler),\n        ];\n\n        return () => unlisteners.forEach((unlistener) => unlistener());\n    }, []);\n\n    return status;\n};\n","import { createElement } from \"./src/core.js\";\nexport { Fragment } from \"./src/core.js\";\n\n/**\n *\n * @param {any} type\n * @param {any} props\n * @param {any} [key ]\n * @returns\n */\nexport const jsx = (type, props, key) => {\n    if (props == undefined) {\n        props = { key };\n    } else {\n        props.key = key;\n    }\n    return createElement(type, props);\n};\n\nexport const jsxs = jsx;\n\nexport const jsxDEV = jsx;\n","import { c } from \"atomico\";\r\nfunction myComponent(props) {\r\n    return (\r\n        <host shadowDom>\r\n            <h1>Welcome!</h1>\r\n            <code>{JSON.stringify(props)}</code>\r\n            <hr />\r\n            <slot></slot>\r\n            <hr />\r\n            <slot name=\"footer\"></slot>\r\n        </host>\r\n    );\r\n}\r\n\r\nmyComponent.props = {\r\n    message: String,\r\n    data: Object,\r\n};\r\n\r\nexport const MyComponent = c(myComponent);\r\n\r\ncustomElements.define(\"my-component\", MyComponent);\r\n","export const options = {\n    global: {},\n    ignore: {},\n    alias: {\n        [String.name]: \"text\",\n        [Number.name]: \"number\",\n        [Boolean.name]: \"boolean\",\n        [Object.name]: \"object\",\n        [Array.name]: \"object\",\n        default: \"text\",\n    },\n    match: [\n        { regExp: /^color/, control: \"color\", and: String },\n        { regExp: /\\w+Color/, control: \"color\", and: String },\n        { regExp: /^date/, control: \"date\" },\n        { regExp: /\\w+Date/, control: \"date\" },\n    ],\n};\n","import { options } from \"./options\";\nexport { decorator } from \"./decorator\";\nexport { options } from \"./options\";\nconst getAutoControl = (prop, type) => options.match.find(({ regExp, and }) => regExp.test(prop) ? (and ? type === and : true) : false);\nexport function define(component, config) {\n    const story = {\n        ...config,\n        argTypes: {},\n        args: {\n            ...config?.args,\n        },\n    };\n    const { props } = component;\n    const types = Object.entries(props)\n        .map(([prop, schema]) => [\n        prop,\n        typeof schema === \"object\" && schema != null\n            ? schema\n            : { type: schema },\n    ])\n        .reduce((types, [prop, schema]) => {\n        const { type, value } = schema;\n        const autoControl = getAutoControl(prop, type);\n        const control = autoControl?.control ||\n            options.alias[type?.name || \"default\"];\n        const defaultValue = typeof value === \"function\" && type !== Function\n            ? value()\n            : type === Boolean && !value\n                ? false\n                : value;\n        return { ...types, [prop]: { control, defaultValue, type } };\n    }, {});\n    story.argTypes = [options.global, config?.argTypes].reduce((argTypes, schema) => {\n        if (!schema)\n            return argTypes;\n        let entries = Object.entries(schema);\n        // global props only apply if their declaration exists in the component props\n        if (schema === options.global)\n            entries = entries.filter(([prop]) => prop in props);\n        return entries.reduce((argTypes, [prop, value]) => {\n            if (value === false) {\n                delete argTypes[prop];\n            }\n            else {\n                const argType = argTypes[prop];\n                const event = /on(.+)/.test(prop) && !types[prop];\n                const automaticCategory = event\n                    ? \"Events\"\n                    : prop.startsWith(\"--\")\n                        ? `CSS custom properties`\n                        : undefined;\n                const { category = argType?.table?.category ||\n                    automaticCategory, defaultValue = argType?.table?.defaultValue?.summary, ...config } = value;\n                let { description = argType?.description } = value;\n                let { control = argType?.control ||\n                    getAutoControl(prop)?.control, } = value || {};\n                const table = {\n                    category,\n                    type: {\n                        ...argType?.table?.type,\n                        ...config?.table?.type,\n                    },\n                    defaultValue: {\n                        summary: defaultValue,\n                        ...argType?.table?.defaultValue,\n                        ...config?.table?.defaultValue,\n                    },\n                };\n                return {\n                    ...argTypes,\n                    [prop]: {\n                        ...argType,\n                        ...config,\n                        description,\n                        control: control,\n                        table,\n                    },\n                };\n            }\n            return argTypes;\n        }, argTypes);\n    }, story.argTypes);\n    Object.entries(types).forEach(([prop, { control, defaultValue, type }]) => {\n        if (story.argTypes?.[prop] === false)\n            return;\n        const argType = story.argTypes?.[prop];\n        story.argTypes[prop] = {\n            ...story.argTypes[prop],\n            control: argType?.control || control,\n            type: argType?.type || type,\n            table: {\n                ...argType?.table,\n                type: {\n                    ...argType?.table?.type,\n                    summary: type?.name || \"Any\",\n                },\n                defaultValue: {\n                    ...argType?.table?.defaultValue,\n                    summary: argType?.table?.defaultValue?.summary || defaultValue,\n                },\n            },\n        };\n        const argValue = prop in story.args ? story.args[prop] : defaultValue;\n        if (argValue != undefined) {\n            story.args[prop] = argValue;\n        }\n    });\n    return story;\n}\nexport const defineArgTypes = (component, argTypes) => define(component, { argTypes }).argTypes;\nexport const defineArgs = (component, argTypes) => define(component, { argTypes }).args;\n"],"names":["useState","initialState","update","useUpdate","useHook","state","load","value","isFunction","nextState","useEvent","type","eventInit","ref","useHost","detail","dispatchEvent","usePromise","callback","args","autorun","setState","currentArgs","useEffect","cancel","result","Config","Type","useAsync","dispatchPending","dispatchFulfilled","dispatchRejected","status","useLayoutEffect","IdSuspense","jsx","props","key","createElement","jsxs","myComponent","MyComponent","c","options","getAutoControl","prop","regExp","and","define","component","config","story","types","schema","autoControl","control","defaultValue","argTypes","entries","argType","automaticCategory","category","_a","_c","_b","description","_d","table","_e","_f","_g","_h","argValue"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}